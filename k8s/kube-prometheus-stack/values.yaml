prometheusOperator:
  # Relabeling job name for operator metrics
  serviceMonitor:
    relabelings:
    # Replace job value
    - sourceLabels:
      - __address__
      action: replace
      targetLabel: job
      replacement: prometheus-operator
  # Disable creation of kubelet service
  kubeletService:
    enabled: false

alertmanager:
  alertmanagerSpec:
    # Subpath /alertmanager configuration
    externalUrl: https://monitoring.keivanipchihagh.com/alertmanager
    routePrefix: /alertmanager
    # PVC configuration
    # storage:
    #   volumeClaimTemplate:
    #     spec:
    #       storageClassName: longhorn
    #       accessModes: ["ReadWriteOnce"]
    #       resources:
    #         requests:
    #           storage: 5Gi
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    ## Hostnames (Must be provided if Ingress is enabled)
    hosts:
      - monitoring.keivanipchihagh.com
    ## Paths to use for ingress rules - one path should match the prometheusSpec.routePrefix
    paths:
    - /alertmanager
    ## TLS configuration for Prometheus Ingress (Secret must be manually created in the namespace)
    tls:
     - secretName: monitoring.keivanipchihagh.com-tls
       hosts:
         - monitoring.keivanipchihagh.com
  # ServiceMonitor job relabel
  serviceMonitor:
    relabelings:
      # Replace job value
      - sourceLabels:
        - __address__
        action: replace
        targetLabel: job
        replacement: alertmanager

prometheus:
  prometheusSpec:
    # Subpath /prometheus configuration
    externalUrl: https://monitoring.keivanipchihagh.com/prometheus
    routePrefix: /prometheus
    # Resources request and limits
    resources:
      requests:
        memory: 1Gi
      limits:
        memory: 1Gi
    # PVC configuration
    # storageSpec:
    #   volumeClaimTemplate:
    #     spec:
    #       storageClassName: longhorn
    #       accessModes: ["ReadWriteOnce"]
    #       resources:
    #         requests:
    #           storage: 5Gi
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    ## Hostnames (Must be provided if Ingress is enabled)
    hosts:
      - monitoring.keivanipchihagh.com
    ## Paths to use for ingress rules - one path should match the prometheusSpec.routePrefix
    paths:
    - /prometheus
    ## TLS configuration for Prometheus Ingress (Secret must be manually created in the namespace)
    tls:
     - secretName: monitoring.keivanipchihagh.com-tls
       hosts:
         - monitoring.keivanipchihagh.com
  # ServiceMonitor job relabel
  serviceMonitor:
    relabelings:
      # Replace job value
      - sourceLabels:
        - __address__
        action: replace
        targetLabel: job
        replacement: prometheus

grafana:
  # Configuring /grafana subpath
  grafana.ini:
    server:
      domain: monitoring.keivanipchihagh.com
      root_url: "%(protocol)s://%(domain)s:%(http_port)s/grafana"
      serve_from_sub_path: true
  # Admin user password
  adminPassword: "admin_password"
  # List of grafana plugins to be installed
  plugins:
    - grafana-piechart-panel
  # ServiceMonitor label and job relabel
  serviceMonitor:
    labels:
      release: kube-prometheus-stack
    relabelings:
      # Replace job value
      - sourceLabels:
        - __address__
        action: replace
        targetLabel: job
        replacement: grafana
  ingress:
    enabled: true
    ## Annotations for Grafana Ingress
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    ## Labels to be added to the Ingress
    labels: {}
    ## Hostnames.
    hosts:
      - monitoring.keivanipchihagh.com
    ## Path for grafana ingress
    path: /grafana
    ## TLS configuration for grafana Ingress (Secret must be manually created in the namespace)
    tls:
    - secretName: monitoring.keivanipchihagh.com-tls
      hosts:
        - monitoring.keivanipchihagh.com
  # Additional data source: Loki
  additionalDataSources:
  - name: Loki
    type: loki
    url: http://loki-gateway.logging.svc.cluster.local

  # Additional configuration to grafana dashboards sidecar
  # Search in all namespaces for configMaps containing label `grafana_dashboard`
  sidecar:
    dashboards:
      searchNamespace: ALL

# Disabling monitoring of K8s services.
# Monitoring of K3S components will be configured out of kube-prometheus-stack
kubelet:
  enabled: false
kubeApiServer:
  enabled: false
kubeControllerManager:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false
kubeEtcd:
  enabled: false
# Disable K8S Prometheus Rules
# Rules for K3S components will be configured out of kube-prometheus-stack
defaultRules:
  create: true
  rules:
    etcd: false
    k8s: false
    kubeApiserverAvailability: false
    kubeApiserverBurnrate: false
    kubeApiserverHistogram: false
    kubeApiserverSlos: false
    kubeControllerManager: false
    kubelet: false
    kubeProxy: false
    kubernetesApps: false
    kubernetesResources: false
    kubernetesStorage: false
    kubernetesSystem: false
    kubeScheduler: false

